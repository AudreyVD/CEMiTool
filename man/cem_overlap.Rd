% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate.R
\name{cem_overlap}
\alias{cem_overlap}
\title{Integrates CEMiTool analyses}
\usage{
cem_overlap(..., analyses_list = NULL, fraction = 1)
}
\arguments{
\item{...}{Objects of class \code{CEMiTool}, data.frames or character string containing
the path to a file with genes and modules.}

\item{analyses_list}{List of objects of class \code{CEMiTool}, data.frames or character
strings containing the path to files with genes and modules.}

\item{fraction}{The fraction of objects in which an edge pair must be present to 
be selected (default = 1, accepts values from 0-1)}
}
\value{
Object of class \code{data.frame} containing edgelist describing common 
edges between the networks defined in module slots from the input objects
}
\description{
Returns the occurrence of edges between different analyses
}
\details{
The method assumes that all genes inside each module are connected to
every other gene from the same module.
}
\examples{
\dontrun{
# Run cemitool twice on expr dataset. In each time, one sample will be removed
data(expr)
set.seed(10)
dset1 <- expr[,-sample(1:ncol(expr), 1)]
dset2 <- expr[,-sample(1:ncol(expr), 1)]
cem1 <- cemitool(dset1) 
cem2 <- cemitool(dset2) 
cemoverlap_df <- cem_overlap(cem1, cem2)
# Can also be run with a list: cemoverlap_df <- cemoverlap(list(cem1, cem2))

# Different types of objects can be combined as well, and invalid objects will
be removed, with a warning
cemoverlap_df <- cem_overlap(cem1, cem2, module_genes(cem), NA, 1, NULL)
}
}
